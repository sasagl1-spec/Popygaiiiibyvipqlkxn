from .. import loader, utils
from telethon.tl.types import Message
import logging

logger = logging.getLogger(__name__)

@loader.tds
class RepeatModuleMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    
    strings = {
        "name": "RepeatBot",
        "active": "‚úÖ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}",
        "stopped": "‚ùå –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
        "no_user": "‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "not_found": "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ",
        "no_active": "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è"
    }
    
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "target_user",
                None,
                "–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è",
                validator=loader.validators.String()
            ),
            loader.ConfigValue(
                "is_active",
                False,
                "–ê–∫—Ç–∏–≤–Ω–æ –ª–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
                validator=loader.validators.Boolean()
            )
        )
    
    @loader.command(ru_doc="–ù–∞—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    async def repeatcmd(self, message: Message):
        """[username] - –ù–∞—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        args = utils.get_args_raw(message)
        
        if not args:
            await utils.answer(message, self.strings["no_user"])
            return
        
        # –£–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å
        target_username = args.lstrip('@')
        
        self.config["target_user"] = target_username
        self.config["is_active"] = True
        
        await utils.answer(
            message,
            self.strings["active"].format(target_username)
        )
        logger.info(f"Repeat activated for: {target_username}")
    
    @loader.command(ru_doc="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ")
    async def stoprepeatcmd(self, message: Message):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ"""
        self.config["is_active"] = False
        await utils.answer(message, self.strings["stopped"])
        logger.info("Repeat stopped")
    
    @loader.command(ru_doc="–°—Ç–∞—Ç—É—Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
    async def repeatstatuscmd(self, message: Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è"""
        if self.config["is_active"] and self.config["target_user"]:
            status = self.strings["active"].format(self.config["target_user"])
        else:
            status = self.strings["no_active"]
        
        await utils.answer(message, f"ü¶ú –°—Ç–∞—Ç—É—Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:\n{status}")
    
    @loader.watcher()
    async def message_watcher(self, message: Message):
        """–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
        if not self.config["is_active"] or not self.config["target_user"]:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not message.sender:
            return
        
        user_username = getattr(message.sender, 'username', None)
        if not user_username:
            return
        
        if user_username.lower() == self.config["target_user"].lower():
            # –ü–æ–≤—Ç–æ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                if message.text:
                    await message.respond(message.text)
                    logger.info(f"Repeated message: {message.text[:50]}...")
                elif message.media:
                    await message.respond(file=message.media)
                    logger.info("Repeated media message")
            except Exception as e:
                logger.error(f"Repeat error: {e}")
    
    @loader.command(ru_doc="–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    async def repeatthiscmd(self, message: Message):
        """[reply] - –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        reply = await message.get_reply_message()
        if not reply:
            await utils.answer(message, "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
            return
        
        try:
            if reply.text:
                await message.respond(reply.text)
            elif reply.media:
                await message.respond(file=reply.media)
            await message.delete()
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")
